# 类的运行逻辑
# def test():  # 函数定义是在函数调用时才会被执行的
#     print('函数打印')
#
#
# test()
# 类在代码开始执行时, 会在类定义处停留2次左右, 进入类内部, 然后返回类定义, 再执行后续代码
# 类定义处停留的原因: 类必须在代码执行前, 全部加载完毕, 类加载顺序如下:
# object 类 -> 自定义父类(object) -> 自定义子类(父类)


class Demo(object):
    """测试类"""

    def test(self):
        print('测试类内部的测试方法')


demo = Demo()
demo.test()
